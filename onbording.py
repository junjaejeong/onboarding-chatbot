# -*- coding: utf-8 -*-
"""Colaboratory에 오신 것을 환영합니다

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

import openai
import streamlit as st

# st.secrets를 통해 API 키 불러오기
# Streamlit Community Cloud에서 Secrets 설정 시 OPENAI_API_KEY를 추가합니다.
openai.api_key = st.secrets["OPENAI_API_KEY"]

# 온보딩 일정 및 정보 데이터
onboarding_data = {
    "목적": "KGM 핵심가치/BI 기반의 조직문화와 시스템 내재화를 통해 자신의 역할과 책임을 명확히 이해하고, '함께 성장하고 변화하는 KGM의 소중한 일원'으로 새로운 조직 환경에 온보딩하도록 지원하기 위함.",
    "교육 대상": "24년 하반기/25년 신규입사자 49명",
    "교육 일정": "2025년 3월 12일(수) ~ 3월 14일(금), 2박 3일 집체교육",
    "교육 장소": "써닝리더십 센터 (경기 용인시 처인구 백암면 고안로 51번길 205)",
    "교육 내용": "1일차: KGM 핵심가치 및 브랜드 아이덴티티 이해, 팀 빌딩\n2일차: 자기관리 스킬 습득, 선배와의 대화 및 경영진과의 대화\n3일차: 경영의 이해 및 조직문화 향상 Action Plan 수립",
    "고용노동부 환급 과정": "HRD-NET 회원가입 및 모바일 HRD-NET 출결 앱 설치 필수",
    "입소버스 운행": "3/12(수) 6:50 출발 (평택 인원: 통근버스 주차장)",
    "퇴소버스 운행": "3/14(금) 14:00 출발 (평택 인원: 통근버스 주차장 이동 후 통근버스 이용)",
    "교육 복장": "단정한 자율복 (운동복 및 등산복 금지)",
    "근태 입력": "사내교육 (2박 3일 각각 8시간 입력)",
    "숙박 준비": "2인 1실 운영 (수건/비누 제공, 개인 사용 세면도구 지참 필요)",
    "교육 불참 후속 업무": "사전 연락 후 불참 사유서 메일 송부 or 업무보고 시 협조부서에 교육문화팀 지정",
    "무단 불참": "의무교육과정으로 미수료 시 당해 교육점수 0점 처리",
    "교육 담당자": "교육문화팀 서형덕 책임 (031-610-3437)"
}

def get_onboarding_info(question):
    """사용자의 질문과 일치하는 온보딩 정보를 반환합니다."""
    for key, value in onboarding_data.items():
        if key in question:
            return value
    return None

def ask_gpt(question):
    """ChatGPT API를 호출하여 답변을 생성합니다."""
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[
                {"role": "system", "content": "당신은 신입사원 온보딩 전문가입니다."},
                {"role": "user", "content": question}
            ],
            temperature=0.7
        )
        return response.choices[0].message.content
    except Exception as e:
        return f"답변 생성 중 오류 발생: {str(e)}"

# Streamlit UI 구성
st.title("🎓 신입사원 온보딩 챗봇")
st.write("신입사원 교육과 관련된 질문을 입력하세요!")

# 사용자 입력 받기
user_input = st.text_input("질문을 입력하세요:")

if user_input:
    # 온보딩 데이터에 있는 질문이면 해당 정보를 반환합니다.
    answer = get_onboarding_info(user_input)
    # 데이터에 없는 경우 ChatGPT에게 질문합니다.
    if answer is None:
        answer = ask_gpt(user_input)
    st.write("📝 답변:", answer)